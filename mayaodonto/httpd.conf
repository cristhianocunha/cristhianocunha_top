ServerRoot "/usr/local/apache2"
Listen 80

LoadModule mpm_event_module modules/mod_mpm_event.so
LoadModule authn_core_module modules/mod_authn_core.so
LoadModule authz_core_module modules/mod_authz_core.so
LoadModule unixd_module modules/mod_unixd.so
LoadModule dir_module modules/mod_dir.so
LoadModule mime_module modules/mod_mime.so

User daemon
Group daemon

ServerAdmin admin@seu-dominio.com
ServerName 72.60.148.92:8080

DocumentRoot "/usr/local/apache2/htdocs"

<Directory "/usr/local/apache2/htdocs">
    Options Indexes FollowSymLinks
    AllowOverride None
    Require all granted
</Directory>

<IfModule dir_module>
    DirectoryIndex index.html
</IfModule>

<Files ".ht*">
    Require all denied
</Files>

ErrorLog /usr/local/apache2/logs/error.log
LogLevel warn

<IfModule log_config_module>
    LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" combined
    LogFormat "%h %l %u %t \"%r\" %>s %b" common
    CustomLog /usr/local/apache2/logs/access.log combined
</IfModule>

<IfModule mime_module>
    TypesConfig conf/mime.types
    AddType application/x-compress .Z
    AddType application/x-gzip .gz .tgz
</IfModule>



# Adicione esta seção à sua configuração do Traefik
http:
  middlewares:
    # ... seus middlewares existentes (redirect-to-https) ...

    # MIDDLEWARES DE SEGURANÇA NOVOS
    # Bloqueia totalmente URLs que contenham .php, .asp, .aspx, etc.
    block-php-path:
      chain:
        middlewares:
          - block-php-regex
    block-php-regex:
      regex: ^(.*\/|^)(\.|)(php|asp|aspx|env|git|wp-admin|config)(\/|\.|$)
      rule: "PathPrefix(`/.env`) || PathPrefix(`/.git`) || PathPrefix(`/wp-admin`) || PathRegex(`^(.*\/|^)(\\.|)(php|asp|aspx)(\\/|\\.|$)`)" 
      # A linha Rule é opcional, a Regex já cobre. Pode usar uma ou outra.
      # A combinação com Chain é mais organizada.

    # Bloqueia User-Agents conhecidamente maliciosos ou scanners
    block-bad-useragents:
      headers:
        userAgent: 
          - "(python-requests|Go-http-client|curl|wget|nikto|sqlmap|MetaExternalAgent|masscan|httpie)"
          - "(dirbuster|gobuster|libwww|winhttp|HTTrack|harvest|acunetix|netsparker)"
          - ".*(bot|spider|crawler|scan|scanner).*"
          - "^(?!(Mozilla|AppleWebKit|Chrome|Safari|Opera|Firefox|Edge)).*$" # Permite apenas browsers comuns
        userAgentRegex: true

  routers:
    # APLIQUE OS MIDDLEWARES AOS SEUS ROUTERS
    mayaodontologia-site-p6zsdt-router-43:
      rule: Host(`mayaodontologia.com.br`)
      service: mayaodontologia-site-p6zsdt-service-43
      middlewares: 
        - block-php-path # <-- Adicione aqui
        - block-bad-useragents # <-- Adicione aqui
      entryPoints:
        - websecure
      tls:
        certResolver: letsencrypt
    # Repita para os outros routers que precisarem de proteção (router-websecure-5, etc.)




    http:
  routers:
    mayaodontologia-site-p6zsdt-router-42:
      rule: Host(`mayaodontologia-site-p6zsdt-94aa00-72-60-148-92.traefik.me`)
      service: mayaodontologia-site-p6zsdt-service-42
      middlewares: []
      entryPoints:
        - web
    mayaodontologia-site-p6zsdt-router-43:
      rule: Host(`mayaodontologia.com.br`)
      service: mayaodontologia-site-p6zsdt-service-43
      middlewares:
        - redirect-to-https
      entryPoints:
        - web
    mayaodontologia-site-p6zsdt-router-websecure-43:
      rule: Host(`mayaodontologia.com.br`)
      service: mayaodontologia-site-p6zsdt-service-43
      middlewares: []
      entryPoints:
        - websecure
  services:
    mayaodontologia-site-p6zsdt-service-42:
      loadBalancer:
        servers:
          - url: http://mayaodontologia-site-p6zsd:80
        passHostHeader: true
    mayaodontologia-site-p6zsdt-service-43:
      loadBalancer:
        servers:
          - url: http://mayaodontologia-site-p6zsdt:80
        passHostHeader: true
